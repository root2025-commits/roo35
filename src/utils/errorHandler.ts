export class ErrorHandler {
  static instance;
  errorLog = [];
  static getInstance() {
    if (!ErrorHandler.instance) {
      ErrorHandler.instance = new ErrorHandler();
    }
    return ErrorHandler.instance;
  }
  logError(error, context = "Unknown") {
    const errorEntry = {
      error,
      timestamp: /* @__PURE__ */ new Date(),
      context
    };
    this.errorLog.push(errorEntry);
    if (this.errorLog.length > 50) {
      this.errorLog = this.errorLog.slice(-50);
    }
    console.error(`[${context}] Error:`, error);
  }
  getErrorLog() {
    return [...this.errorLog];
  }
  clearErrorLog() {
    this.errorLog = [];
  }
  handleAsyncError(promise, context) {
    return promise.catch((error) => {
      this.logError(error, context);
      throw error;
    });
  }
}
export const errorHandler = ErrorHandler.getInstance();
export function useErrorHandler() {
  const logError = (error, context) => {
    errorHandler.logError(error, context);
  };
  const handleAsyncError = (promise, context) => {
    return errorHandler.handleAsyncError(promise, context);
  };
  return { logError, handleAsyncError };
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImVycm9ySGFuZGxlci50cyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDZW50cmFsaXplZCBlcnJvciBoYW5kbGluZyB1dGlsaXR5XG5leHBvcnQgY2xhc3MgRXJyb3JIYW5kbGVyIHtcbiAgcHJpdmF0ZSBzdGF0aWMgaW5zdGFuY2U6IEVycm9ySGFuZGxlcjtcbiAgcHJpdmF0ZSBlcnJvckxvZzogQXJyYXk8eyBlcnJvcjogRXJyb3I7IHRpbWVzdGFtcDogRGF0ZTsgY29udGV4dDogc3RyaW5nIH0+ID0gW107XG5cbiAgc3RhdGljIGdldEluc3RhbmNlKCk6IEVycm9ySGFuZGxlciB7XG4gICAgaWYgKCFFcnJvckhhbmRsZXIuaW5zdGFuY2UpIHtcbiAgICAgIEVycm9ySGFuZGxlci5pbnN0YW5jZSA9IG5ldyBFcnJvckhhbmRsZXIoKTtcbiAgICB9XG4gICAgcmV0dXJuIEVycm9ySGFuZGxlci5pbnN0YW5jZTtcbiAgfVxuXG4gIGxvZ0Vycm9yKGVycm9yOiBFcnJvciwgY29udGV4dDogc3RyaW5nID0gJ1Vua25vd24nKTogdm9pZCB7XG4gICAgY29uc3QgZXJyb3JFbnRyeSA9IHtcbiAgICAgIGVycm9yLFxuICAgICAgdGltZXN0YW1wOiBuZXcgRGF0ZSgpLFxuICAgICAgY29udGV4dFxuICAgIH07XG5cbiAgICB0aGlzLmVycm9yTG9nLnB1c2goZXJyb3JFbnRyeSk7XG4gICAgXG4gICAgLy8gS2VlcCBvbmx5IGxhc3QgNTAgZXJyb3JzXG4gICAgaWYgKHRoaXMuZXJyb3JMb2cubGVuZ3RoID4gNTApIHtcbiAgICAgIHRoaXMuZXJyb3JMb2cgPSB0aGlzLmVycm9yTG9nLnNsaWNlKC01MCk7XG4gICAgfVxuXG4gICAgY29uc29sZS5lcnJvcihgWyR7Y29udGV4dH1dIEVycm9yOmAsIGVycm9yKTtcbiAgfVxuXG4gIGdldEVycm9yTG9nKCk6IEFycmF5PHsgZXJyb3I6IEVycm9yOyB0aW1lc3RhbXA6IERhdGU7IGNvbnRleHQ6IHN0cmluZyB9PiB7XG4gICAgcmV0dXJuIFsuLi50aGlzLmVycm9yTG9nXTtcbiAgfVxuXG4gIGNsZWFyRXJyb3JMb2coKTogdm9pZCB7XG4gICAgdGhpcy5lcnJvckxvZyA9IFtdO1xuICB9XG5cbiAgaGFuZGxlQXN5bmNFcnJvcihwcm9taXNlOiBQcm9taXNlPGFueT4sIGNvbnRleHQ6IHN0cmluZyk6IFByb21pc2U8YW55PiB7XG4gICAgcmV0dXJuIHByb21pc2UuY2F0Y2goZXJyb3IgPT4ge1xuICAgICAgdGhpcy5sb2dFcnJvcihlcnJvciwgY29udGV4dCk7XG4gICAgICB0aHJvdyBlcnJvcjtcbiAgICB9KTtcbiAgfVxufVxuXG5leHBvcnQgY29uc3QgZXJyb3JIYW5kbGVyID0gRXJyb3JIYW5kbGVyLmdldEluc3RhbmNlKCk7XG5cbi8vIEVycm9yIGJvdW5kYXJ5IGhvb2tcbmV4cG9ydCBmdW5jdGlvbiB1c2VFcnJvckhhbmRsZXIoKSB7XG4gIGNvbnN0IGxvZ0Vycm9yID0gKGVycm9yOiBFcnJvciwgY29udGV4dDogc3RyaW5nKSA9PiB7XG4gICAgZXJyb3JIYW5kbGVyLmxvZ0Vycm9yKGVycm9yLCBjb250ZXh0KTtcbiAgfTtcblxuICBjb25zdCBoYW5kbGVBc3luY0Vycm9yID0gKHByb21pc2U6IFByb21pc2U8YW55PiwgY29udGV4dDogc3RyaW5nKSA9PiB7XG4gICAgcmV0dXJuIGVycm9ySGFuZGxlci5oYW5kbGVBc3luY0Vycm9yKHByb21pc2UsIGNvbnRleHQpO1xuICB9O1xuXG4gIHJldHVybiB7IGxvZ0Vycm9yLCBoYW5kbGVBc3luY0Vycm9yIH07XG59Il0sIm1hcHBpbmdzIjoiQUFDTyxhQUFNLGFBQWE7QUFBQSxFQUN4QixPQUFlO0FBQUEsRUFDUCxXQUFzRSxDQUFDO0FBQUEsRUFFL0UsT0FBTyxjQUE0QjtBQUNqQyxRQUFJLENBQUMsYUFBYSxVQUFVO0FBQzFCLG1CQUFhLFdBQVcsSUFBSSxhQUFhO0FBQUEsSUFDM0M7QUFDQSxXQUFPLGFBQWE7QUFBQSxFQUN0QjtBQUFBLEVBRUEsU0FBUyxPQUFjLFVBQWtCLFdBQWlCO0FBQ3hELFVBQU0sYUFBYTtBQUFBLE1BQ2pCO0FBQUEsTUFDQSxXQUFXLG9CQUFJLEtBQUs7QUFBQSxNQUNwQjtBQUFBLElBQ0Y7QUFFQSxTQUFLLFNBQVMsS0FBSyxVQUFVO0FBRzdCLFFBQUksS0FBSyxTQUFTLFNBQVMsSUFBSTtBQUM3QixXQUFLLFdBQVcsS0FBSyxTQUFTLE1BQU0sR0FBRztBQUFBLElBQ3pDO0FBRUEsWUFBUSxNQUFNLElBQUksT0FBTyxZQUFZLEtBQUs7QUFBQSxFQUM1QztBQUFBLEVBRUEsY0FBeUU7QUFDdkUsV0FBTyxDQUFDLEdBQUcsS0FBSyxRQUFRO0FBQUEsRUFDMUI7QUFBQSxFQUVBLGdCQUFzQjtBQUNwQixTQUFLLFdBQVcsQ0FBQztBQUFBLEVBQ25CO0FBQUEsRUFFQSxpQkFBaUIsU0FBdUIsU0FBK0I7QUFDckUsV0FBTyxRQUFRLE1BQU0sV0FBUztBQUM1QixXQUFLLFNBQVMsT0FBTyxPQUFPO0FBQzVCLFlBQU07QUFBQSxJQUNSLENBQUM7QUFBQSxFQUNIO0FBQ0Y7QUFFTyxhQUFNLGVBQWUsYUFBYSxZQUFZO0FBRzlDLGdCQUFTLGtCQUFrQjtBQUNoQyxRQUFNLFdBQVcsQ0FBQyxPQUFjLFlBQW9CO0FBQ2xELGlCQUFhLFNBQVMsT0FBTyxPQUFPO0FBQUEsRUFDdEM7QUFFQSxRQUFNLG1CQUFtQixDQUFDLFNBQXVCLFlBQW9CO0FBQ25FLFdBQU8sYUFBYSxpQkFBaUIsU0FBUyxPQUFPO0FBQUEsRUFDdkQ7QUFFQSxTQUFPLEVBQUUsVUFBVSxpQkFBaUI7QUFDdEM7IiwibmFtZXMiOltdfQ==